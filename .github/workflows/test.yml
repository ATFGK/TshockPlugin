name: test

on: [push, pull_request]

jobs:
  test:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Run tests
        run: dotnet test

  build:
    runs-on: ubuntu-latest
    #strategy:
      #matrix:
        #arch: ["win-x64", "osx-x64", "linux-x64", "linux-arm64", "linux-arm"]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.100'

      - name: Install msgfmt
        run: sudo apt-get install -y gettext

      - name: Build
        run: |
          cd ConsoleApp1
          dotnet build
        
      - name: CI Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Test
          path: |
            ./ConsoleApp1/bin/Debug/net6.0/


      #- name: 产生安装
        #run: |
            #cd ConsoleApp1
            #dotnet publish -r ${{ matrix.arch }} -f net6.0 -c Release -p:PublishSingleFile=true --self-contained true
      #- name: 产生 build
        #run: |
            #cd ConsoleApp1
            #dotnet publish -r ${{ matrix.arch }} -f net6.0 -c Release -p:PublishSingleFile=true --self-contained false
            
            
      #- name: Chmod脚本加权限
        #if: ${{ matrix.arch != 'win-x64' }}
        #run: |
            #chmod +x TShockLauncher/bin/Release/net6.0/${{ matrix.arch }}/publish/TShock.Server
      #- name: 复制安装
        #run: |
            #cp TShockInstaller/bin/Release/net6.0/${{ matrix.arch }}/publish/* TShockLauncher/bin/Release/net6.0/${{ matrix.arch }}/publish/
      # preserve file perms: https://github.com/actions/upload-artifact#maintaining-file-permissions-and-case-sensitive-files
      #- name: Tarball artifact (non-Windows)
        #if: ${{ matrix.arch != 'win-x64' }}
        #run: |
            #cd TShockLauncher/bin/Release/net6.0/${{ matrix.arch }}/publish/
            #tar -cvf ../../../../../../TShock-Beta-${{ matrix.arch }}-Release.tar *
            
      #- name: Upload artifact (non-Windows)
        #uses: actions/upload-artifact@v3
        #if: ${{ matrix.arch != 'win-x64' }}
        #with:
          #name: TShock-Beta-${{ matrix.arch }}-Release
          #path: TShock-Beta-${{ matrix.arch }}-Release.tar




      #- name: Upload artifact (Windows)
        #uses: actions/upload-artifact@v3
        #if: ${{ matrix.arch == 'win-x64' }}
        #with:
          #name: TShock-Beta-${{ matrix.arch }}-Release
          #path: ConsoleApp1/bin/Debug/net6.0/${{ matrix.arch }}/publish/
